name    = Neo4j-Driver
author  = Arne Johannessen <ajnn@cpan.org>
license = Artistic_2_0
copyright_holder = Arne Johannessen
copyright_year   = 2016-2021

main_module = lib/Neo4j/Driver.pm

version = 0.20
release_status = stable

; The reason for using AutoPrereqs with a great many exceptions
; is that erring on the side of listing too many requirements is
; preferable to erring on the side of listing too few.
[AutoPrereqs]
; don't mention modules that have been in core since the minimum supported Perl version
skip = ^lib|overload|strict|utf8|warnings$
skip = ^Carp|Scalar::Util|Time::Piece$
skip = ^Digest::MD5|File::Basename$
; URI::_server is part of URI, which is included by AutoPrereqs
skip = ^URI::_server$
; Bolt is an XS module and loaded dynamically only if available
skip = ^Neo4j::Bolt$
[Prereqs]
LWP::UserAgent = 0
[Prereqs / Suggests]
-relationship = suggests
perl = 5.016
Cpanel::JSON::XS = 4.16
Neo4j::Bolt = 0.02

[GatherDir]
exclude_filename = README.md
exclude_match = ^t/simulator/[^/]+\.txt$
prune_directory = \.bbprojectd$
prune_directory = ^Stuff$
prune_directory = ^cover_db$

; move TODO file install location to Driver namespace
exclude_match = ^TODO.pod$
[Run::BeforeBuild]
eval = link "TODO.pod", "lib%pNeo4j%pDriver%pTODO.pod";
[Run::AfterBuild]
run = cp TODO.pod "%d%plib%pNeo4j%pDriver%pTODO.pod"
eval = unlink "lib%pNeo4j%pDriver%pTODO.pod";
[Run::Clean]
eval = unlink "lib%pNeo4j%pDriver%pTODO.pod";

[PruneCruft]
[MetaNoIndex]
directory = t/lib
[MetaJSON]
[MetaYAML]
[MetaProvides::Package]
[Readme]
;[ExtraTests]
[Test::Perl::Critic]
[PodSyntaxTests]
[MakeMaker]
[Manifest]
[Git::Check]
build_warnings = 1
[TestRelease]
[ConfirmRelease]
[UploadToCPAN]

[GithubMeta]
issues = 1
user   = johannessen
[PodWeaver]
[CheckChangeLog]
[PkgVersion]
die_on_existing_version = 1
die_on_line_insertion = 1

;[Run::BeforeBuild]
;eval = $ENV{TEST_NEO4J_SERVER} = 'http://localhost:7474';
;eval = $ENV{TEST_NEO4J_USERNAME} = 'neo4j';
;eval = $ENV{TEST_NEO4J_PASSWORD} = 'neo4j';
;eval = $ENV{NEO4J} = '4.0';
;eval = $ENV{HTTPS_CA_FILE} = 'neo4j/certificates/neo4j.cert';
