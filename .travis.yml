language: perl

# Differences must be expected between major Neo4j versions.
# Additionally, at least one old Perl version should be tested.
# Other than that, no major differences between combinations of
# distinct versions are known or expected, therefore the testing
# matrix can be small.
jobs:
  include:
    - perl: "5.32.0"
      env: NEO4J=4.2.2 JAVA=11
      dist: focal
    - perl: "5.30.3"
      env: NEO4J=3.5.26 JAVA=8
      dist: bionic
    - perl: "5.24.3"
      env: NEO4J=2.3.12 JAVA=8
      dist: xenial
    - perl: "5.10"
      env: NEO4J=3.3.9 JAVA=8
      dist: trusty
  allow_failures:
    - dist: trusty
  fast_finish: true

env:
  global:
    - TEST_NEO4J_PASSWORD=xkcd792

git:
  depth: 1

# The neo4j launch script relies heavily on the JAVA_HOME environment
# variable. Some of the VMs provided by Travis have JREs installed
# manually into /usr/local and placed in the PATH before /usr/bin,
# making it impossible to switch the JRE using conventional methods.
# Therefore JAVA_HOME must be configured manually here.
before_install:
  - perlbrew list
  - perlbrew available  # not all of these are installable in Travis
  - if [[ "$JAVA" = "8" ]] ; then sudo apt-get -y install openjdk-8-jre-headless ; fi
  - if [[ "$JAVA" = "11" && -d /usr/local/lib/jvm/openjdk11 ]] ; then echo "Java 11 OpenJDK" ; export JAVA_HOME=/usr/local/lib/jvm/openjdk11 ; fi
  - if [[ "$JAVA" = "8" && -d /usr/lib/jvm/java-8-openjdk-amd64/jre ]] ; then echo "Java 8 OpenJDK" ; export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64/jre ; elif [[ "$JAVA" = "8" && -d /usr/lib/jvm/java-8-oracle/jre ]] ; then echo "Java 8 Oracle" ; export JAVA_HOME=/usr/lib/jvm/java-8-oracle/jre ; fi
  - eval "${JAVA_HOME:-/usr}/bin/java -version"
  - curl -O https://dist.neo4j.org/neo4j-community-$NEO4J-unix.tar.gz
  - tar -xzf neo4j-community-$NEO4J-unix.tar.gz
  - neo4j-community-$NEO4J/bin/neo4j-admin set-initial-password "$TEST_NEO4J_PASSWORD" || echo "Password change using neo4j-admin failed."
  - neo4j-community-$NEO4J/bin/neo4j start

# Dist::Zilla doesn't work with Perl < 5.14, so some foo is needed
# to use MakeMaker instead for the 5.10 test. While Dist::Zilla
# can determine dependencies automatically, MakeMaker requires
# an explicit list here.
install:
  - cpanm -nq JSON::MaybeXS LWP::UserAgent Neo4j::Types REST::Client Time::Piece Try::Tiny URI
  - cpanm -nq File::Slurp JSON::PP Mock::Quick Test::Exception Test::More Test::Warnings
  - OLD_PERL=`perl -e 'print $] < "5.014";'`
  - if test $OLD_PERL ; then touch Makefile.PL ; fi
  - if test $OLD_PERL ; then perl -MExtUtils::MakeMaker -e 'WriteMakefile(NAME=>"Neo4j::Driver");' ; fi
  - if test $OLD_PERL ; then make ; fi
  - test $OLD_PERL || cpanm -nq Dist::Zilla
  - test $OLD_PERL || dzil authordeps --missing | cpanm -nq
  - test $OLD_PERL || dzil listdeps --missing --author | cpanm -nq

before_script:
  - neo4j-community-$NEO4J/bin/neo4j status
  - curl -u neo4j:neo4j -fid "{\"password\":\"$TEST_NEO4J_PASSWORD\"}" -H "Content-Type:application/json" http://localhost:7474/user/neo4j/password || echo "Password change using cURL failed."
  - perl -Ilib -MNeo4j::Driver -e "print Neo4j::Driver->new->basic_auth(neo4j=>'$TEST_NEO4J_PASSWORD')->session->run(\"RETURN 'Connected to Neo4j\\n'\")->single->get;" || echo "Error testing Neo4j connection"
  # export AUTHOR_TESTING=1

script:
  - test $OLD_PERL && make test || dzil test

